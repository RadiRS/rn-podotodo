name: Android Staging Distribution

on:
  push:
    branches:
      - staging

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3.4.1
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Cache Gradle Wrapper
        uses: actions/cache@v3.0.8
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3.0.8
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew
      - name: Build Android Staging apk
        run: |
          cd android && ./gradlew assembleStagRelease
      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: app-stag-release.apk
          path: android/app/build/outputs/apk/stag/release/

  distribution:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: staging
    env:
      SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
      FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
      FIREBASE_GROUPS: ${{ secrets.FIREBASE_GROUPS }}
      RELEASE_NOTES: ${{ github.event.head_commit.message }}
      GOOGLE_APPLICATION_CREDENTIALS: service-account.json
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: app-stag-release.apk
      - name: Genarate Files .json
        run: echo $SERVICE_ACCOUNT_JSON | base64 -d -i > service-account.json
      - name: Distribute app via Firebase App Distribution
        run: |
          yarn global add firebase-tools
          export PATH="$(yarn global bin):$PATH"
          firebase \
            appdistribution:distribute app-stag-release.apk \
            --app $FIREBASE_APP_ID_ANDROID \
            --release-notes "$RELEASE_NOTES" \
            --groups "$FIREBASE_GROUPS"
